Case Study 2: Library Management System

      Scenario:      
You are tasked with creating a database to manage a library's inventory, members, and borrowing records. 

      Tasks:      
1.       Create the Database:      
   - Name the database `LibraryDB`.

2.       Create Tables:      
   -       Books Table:      
     - `id`: INT, Primary Key, Auto Increment
     - `title`: VARCHAR(100), Not Null
     - `author`: VARCHAR(50), Not Null
     - `published_year`: YEAR, Not Null
     - `genre`: VARCHAR(30)
   -       Members Table:      
     - `id`: INT, Primary Key, Auto Increment
     - `name`: VARCHAR(50), Not Null
     - `membership_date`: DATE, Not Null
   -       Borrowing Table:      
     - `id`: INT, Primary Key, Auto Increment
     - `book_id`: INT, Foreign
 Key References `Books(id)`
     - `member_id`: INT, Foreign Key References `Members(id)`
     - `borrow_date`: DATE, Not Null
     - `return_date`: DATE

create table books(
id int primary key auto_increment,
title varchar(100) not null,
author varchar(50) not null,
published_year year not null,
genre varchar(30) );

create table member (
mem_id int primary key auto_increment,
name varchar(50) not null,
membership_date date not null);

create table borrowing (
id int primary key auto_increment ,
book_id int ,foreign key(book_id) references books(id),
member_id int,foreign key(member_id) references member(mem_id),
borrow_date date not null,
return_date date); 







3.       Insert Sample Data.      

SELECT * FROM librarydb.books;

insert into books values(1,'harry potter 1','auhtor1',1986,'fiction'),
(2,'narnia','author2',1990,'fantasy'),
(3,'evil dead','author3',1998,'horror'),
(4,'rush hour','author4',2004,'action'),
(5,'baby day out','author5',2000,'comedy'),
(6,'mouse','auhtor6',2015,'thriller');





SELECT * FROM librarydb.member;

insert into member values(101,'ash','2019-12-20'),
(102,'jim','2023-08-16'),
(103,'ben','2021-07-19'),
(104,'lisa','2017-10-06'),
(105,'jenni','2015-02-25');




SELECT * FROM librarydb.borrowing;

insert into borrowing values(1,3,104,'2023-09-11','2024-05-23'),
(2,6,103,'2023-11-09','2024-07-19'),
(3,4,101,'2024-03-02','2024-11-04'),
(4,5,102,'2024-01-27','2024-10-09'),
(5,1,105,'2023-08-21','2023-12-28');







4.       Queries:      
   - List all books.

select title from books;


   - List all members.

select name from member;


   - Show borrowing records with member names and book titles.

select member.name,books.title ,borrowing.borrow_date from books join borrowing 
on borrowing.book_id=books.id inner join member on borrowing.member_id=member.mem_id;


   - Count the number of books borrowed by each member.

select member.name,count(borrowing.id) as book_cou from  member join borrowing 
on member.mem_id=borrowing.member_id group by mem_id;




